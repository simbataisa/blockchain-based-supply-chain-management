# Environment Configuration Template
# Blockchain Supply Chain Management System
# Copy this file to .env.local, .env.development, .env.staging, or .env.production
# and fill in the actual values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database (Update for your environment)
DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/supply_chain

# Individual database connection parameters
DB_HOST=localhost
DB_PORT=5432
DB_NAME=supply_chain
DB_USER=postgres
DB_PASSWORD=postgres123

# Redis Configuration (Docker Compose setup)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0

# =============================================================================
# AUTH0 CONFIGURATION
# =============================================================================
# Your Auth0 domain
VITE_AUTH0_DOMAIN=your-auth0-domain.auth0.com

# Your Auth0 client ID
VITE_AUTH0_CLIENT_ID=your-auth0-client-id

# Your Auth0 audience (API identifier)
VITE_AUTH0_AUDIENCE=your-auth0-api-audience

# Auth0 callback URL
VITE_AUTH0_REDIRECT_URI=http://localhost:5174/callback

# Auth0 Management API (for server-side operations)
AUTH0_DOMAIN=your-auth0-domain.auth0.com
AUTH0_CLIENT_ID=your-auth0-client-id
AUTH0_CLIENT_SECRET=your-auth0-client-secret
AUTH0_AUDIENCE=your-auth0-api-audience

# =============================================================================
# BLOCKCHAIN CONFIGURATION
# =============================================================================
# Blockchain network to connect to
# Options: ethereum-mainnet, ethereum-goerli, polygon-mainnet, polygon-mumbai
VITE_BLOCKCHAIN_NETWORK=polygon-mumbai

# RPC URL for blockchain connection
# Get from Infura, Alchemy, or other RPC providers
VITE_BLOCKCHAIN_RPC_URL=https://rpc-mumbai.maticvigil.com

# Chain ID for the blockchain network
# Ethereum Mainnet: 1, Goerli: 5, Polygon Mainnet: 137, Mumbai: 80001
VITE_BLOCKCHAIN_CHAIN_ID=80001

# Human-readable network name
VITE_BLOCKCHAIN_NETWORK_NAME=Polygon Mumbai Testnet

# Smart Contract Addresses (deploy contracts and update these)
VITE_SUPPLY_CHAIN_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000
VITE_PRODUCT_REGISTRY_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000
VITE_QUALITY_ASSURANCE_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000

# Private keys for contract deployment and admin operations
# ⚠️ NEVER use real private keys with funds in development
VITE_DEPLOYER_PRIVATE_KEY=your-deployer-private-key-here
VITE_ADMIN_PRIVATE_KEY=your-admin-private-key-here

# =============================================================================
# WEB3 WALLET CONFIGURATION
# =============================================================================
# WalletConnect Project ID (get from https://cloud.walletconnect.com/)
VITE_WALLET_CONNECT_PROJECT_ID=your-walletconnect-project-id

# Enable/disable wallet providers
VITE_ENABLE_WALLET_CONNECT=true
VITE_ENABLE_METAMASK=true
VITE_ENABLE_COINBASE_WALLET=true

# =============================================================================
# API CONFIGURATION
# =============================================================================
# Base URL for your API endpoints
VITE_API_BASE_URL=http://localhost:3000

# API version
VITE_API_VERSION=v1

# Request timeout in milliseconds
VITE_API_TIMEOUT=30000

# Backend server configuration
PORT=3000
NODE_ENV=development
API_PREFIX=/api/v1

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database connection
DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/supply_chain

# PostgreSQL database configuration
DATABASE_DIR=./database

# Redis configuration for caching and sessions
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# JWT secret for token signing (use a strong, random string)
JWT_SECRET=your-jwt-secret-key-minimum-32-characters-long

# JWT token expiration time
JWT_EXPIRES_IN=1h

# Refresh token secret and expiration
REFRESH_TOKEN_SECRET=your-refresh-token-secret-key-here
REFRESH_TOKEN_EXPIRES_IN=7d

# Session configuration
SESSION_SECRET=your-session-secret-key-here
SESSION_MAX_AGE=86400000

# Encryption keys for sensitive data
ENCRYPTION_KEY=your-encryption-key-32-characters
HASH_SALT_ROUNDS=12

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# IPFS Configuration for decentralized file storage
VITE_IPFS_GATEWAY_URL=https://ipfs.io
VITE_IPFS_API_URL=https://api.pinata.cloud
IPFS_PROJECT_ID=your-ipfs-project-id
IPFS_PROJECT_SECRET=your-ipfs-project-secret

# Email service configuration (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-email-password-or-app-password
SMTP_FROM=noreply@yourcompany.com

# SMS service configuration (Twilio)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# =============================================================================
# IOT & TRACKING SERVICES
# =============================================================================
# GPS tracking service configuration
VITE_GPS_TRACKING_API_URL=https://your-gps-service.com
GPS_TRACKING_API_KEY=your-gps-api-key

# IoT device management (MQTT broker)
VITE_IOT_MQTT_BROKER=mqtt://localhost:1883
IOT_MQTT_USERNAME=iot_user
IOT_MQTT_PASSWORD=iot_password

# Sensor data processing service
VITE_SENSOR_DATA_API_URL=https://your-sensor-service.com
SENSOR_DATA_API_KEY=your-sensor-api-key

# =============================================================================
# ANALYTICS & MONITORING
# =============================================================================
# Analytics service configuration
VITE_ANALYTICS_API_URL=https://your-analytics-service.com
ANALYTICS_API_KEY=your-analytics-api-key

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=combined
ENABLE_REQUEST_LOGGING=true

# Error tracking (Sentry)
VITE_SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development

# =============================================================================
# FILE STORAGE
# =============================================================================
# Local file upload configuration
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,pdf,doc,docx,csv,xlsx

# Local file storage configuration
VITE_LOCAL_STORAGE_PATH=./storage/documents

# =============================================================================
# COMPLIANCE & AUDIT
# =============================================================================
# Audit trail configuration
ENABLE_AUDIT_LOGGING=true
AUDIT_LOG_RETENTION_DAYS=90

# Compliance reporting
COMPLIANCE_REPORT_SCHEDULE=0 0 * * 1
COMPLIANCE_REPORT_EMAIL=compliance@yourcompany.com

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================
# Hot module replacement configuration (Vite)
VITE_HMR_PORT=24678
VITE_HMR_HOST=localhost

# Debug configuration
DEBUG=supply-chain:*
VITE_DEBUG_MODE=true
VITE_SHOW_DEV_TOOLS=true

# Testing configuration
TEST_DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/supply_chain_test
TEST_AUTH0_DOMAIN=your-test-auth0-domain.auth0.com
TEST_AUTH0_CLIENT_ID=your-test-auth0-client-id

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable major features
VITE_ENABLE_WEB3_FEATURES=true
VITE_ENABLE_IOT_INTEGRATION=true
VITE_ENABLE_REAL_TIME_TRACKING=true
VITE_ENABLE_SMART_CONTRACTS=true
VITE_ENABLE_MULTI_SIGNATURE=true
VITE_ENABLE_QUALITY_ASSURANCE=true
VITE_ENABLE_COMPLIANCE_REPORTING=true
VITE_ENABLE_ANALYTICS_DASHBOARD=true
VITE_ENABLE_EXPERIMENTAL_FEATURES=false

# =============================================================================
# RATE LIMITING
# =============================================================================
# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Cross-Origin Resource Sharing settings
CORS_ORIGIN=http://localhost:5173,http://localhost:3000
CORS_CREDENTIALS=true
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With,X-API-Key

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================
# Caching settings
CACHE_TTL=3600
CACHE_MAX_SIZE=100
ENABLE_RESPONSE_CACHING=true

# =============================================================================
# NOTIFICATION SERVICES
# =============================================================================
# Push notifications (Web Push)
VITE_VAPID_PUBLIC_KEY=your-vapid-public-key
VAPID_PRIVATE_KEY=your-vapid-private-key
VAPID_SUBJECT=mailto:admin@yourcompany.com

# Webhook configuration
WEBHOOK_SECRET=your-webhook-secret-key
WEBHOOK_TIMEOUT=5000

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================
# Backup configuration
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=./backups

# =============================================================================
# PERFORMANCE MONITORING
# =============================================================================
# Performance monitoring settings
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_SAMPLE_RATE=0.1
MEMORY_USAGE_THRESHOLD=80
CPU_USAGE_THRESHOLD=80

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================
# Payment processing (Stripe)
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret

# Maps and geolocation services
GOOGLE_MAPS_API_KEY=your-google-maps-api-key
MAPBOX_ACCESS_TOKEN=your-mapbox-access-token

# Document processing (DocuSign)
DOCUSIGN_INTEGRATION_KEY=your-docusign-integration-key
DOCUSIGN_USER_ID=your-docusign-user-id
DOCUSIGN_ACCOUNT_ID=your-docusign-account-id

# =============================================================================
# API KEYS & SECRETS
# =============================================================================
# Weather API for environmental tracking
WEATHER_API_KEY=your-weather-api-key

# Blockchain explorer APIs
ETHERSCAN_API_KEY=your-etherscan-api-key
POLYGONSCAN_API_KEY=your-polygonscan-api-key

# Machine learning services
ML_MODEL_API_URL=https://your-ml-service.com
ML_MODEL_API_KEY=your-ml-api-key

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
# SSL certificate paths (for production)
SSL_CERT_PATH=/path/to/certificate.crt
SSL_KEY_PATH=/path/to/private.key
SSL_CA_PATH=/path/to/ca-bundle.crt
FORCE_HTTPS=false

# =============================================================================
# LOAD BALANCING & SCALING
# =============================================================================
# Clustering and scaling configuration
CLUSTER_MODE=false
WORKER_PROCESSES=1
MAX_CONNECTIONS=1000
KEEP_ALIVE_TIMEOUT=65000

# =============================================================================
# SECURITY HEADERS
# =============================================================================
# Security middleware configuration
ENABLE_HELMET=true
CSP_POLICY=default-src 'self'
HSTS_MAX_AGE=31536000
X_FRAME_OPTIONS=DENY
X_CONTENT_TYPE_OPTIONS=nosniff

# =============================================================================
# ENVIRONMENT METADATA
# =============================================================================
# Environment identification
ENVIRONMENT_NAME=development
DEPLOYMENT_VERSION=1.0.0
BUILD_NUMBER=local-build
DEPLOYMENT_DATE=2024-01-15T00:00:00Z
GIT_COMMIT_HASH=local-commit

# =============================================================================
# HEALTH CHECKS & MONITORING
# =============================================================================
# Health check endpoints
HEALTH_CHECK_ENDPOINT=/health
READINESS_CHECK_ENDPOINT=/ready
LIVENESS_CHECK_ENDPOINT=/alive
METRICS_ENDPOINT=/metrics

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Environment-specific files are already created with appropriate configurations:
#    .env.local          # For local development with Docker Compose
#    .env.development     # For development environment
#    .env.staging         # For staging environment
#    .env.production      # For production environment
#
# 2. Update each environment file with your actual values:
#    - Database credentials and connection strings
#    - Auth0 domain, client ID, and secrets
#    - API keys and external service credentials
#    - Blockchain network settings and contract addresses
#
# 3. Security best practices:
#    - Never commit .env files with real secrets to version control
#    - Use strong, unique passwords for all services
#    - Rotate secrets regularly
#    - Use environment-specific secret management in production
# 4. Keep production secrets secure and use secret management tools
# 5. Enable MFA where possible
# 6. Monitor for unauthorized access
# 7. Follow security best practices for your deployment environment

# =============================================================================
# SECURITY NOTES
# =============================================================================
# ⚠️  IMPORTANT SECURITY CONSIDERATIONS:
# - Never commit files containing real secrets to version control
# - Use environment-specific values for each deployment
# - Rotate secrets regularly
# - Use strong, unique passwords and API keys
# - Enable monitoring and alerting for security events
# - Follow the principle of least privilege
# - Use HTTPS in production
# - Enable proper CORS settings
# - Implement rate limiting
# - Use secure session management
# - Enable audit logging
# - Regular security audits and penetration testing